{"version":3,"sources":["Components/Navigation/Navigation.module.css","Components/SearchInput/SearchInput.module.css","Components/Navbar/Navbar.module.css","Components/CurrentWeather/CurrentWeather.module.css","Components/AirQuality/AirQuality.module.css","Components/Footer/Footer.module.css","Components/SearchInput/Input/Input.module.css","redux/quality-reducer.js","Components/AirQuality/AirQuality.jsx","Components/AirQuality/AirQualityContainer.jsx","redux/weather-reducer.js","Components/CurrentWeather/CurrentWeather.jsx","Components/CurrentWeather/CurrentWeatherContainer.jsx","Components/Footer/Footer.jsx","Components/HistorycalWeather/HistorycalWeather.jsx","Components/HistorycalWeather/HistorycalWeatherContainer.jsx","Components/Navbar/Navbar.jsx","Components/Navbar/NavbarContainer.jsx","Components/Navigation/Navigation.jsx","redux/historycal-weather-reducer.js","redux/search-reducer.js","Components/SearchInput/Input/Input.jsx","Components/SearchInput/SearchInput.jsx","Components/SearchInput/SearchInputContainer.jsx","redux/app-reducer.js","App.jsx","reportWebVitals.js","redux/navbar-reducer.js","redux/redux-store.js","index.js","Components/HistorycalWeather/HistorycalWeather.module.css"],"names":["module","exports","GET_QUALITY","initialState","quality","getQuality","data","type","qualityReducer","state","action","AirQuality","props","undefined","length","co","so2","o3","no2","aqi","className","style","params","city_name","AirQualityContainer","this","error","extension","React","Component","connect","console","log","searchReducer","GET_WEATHER","weather","getWeather","weatherReducer","CurrentWeather","description","item","genegalParams","temp","app_temp","wind_spd","wind_cdir","rh","clouds","CurrentWeatherContainer","city","nameCity","country","nameCountry","Footer","HistorycalWeather","historycalWeather","param","max_temp","min_temp","solar_rad","max_uv","HistorycalWeatherContainer","historycalWeatherReducer","Navbar","onClick","getInputs","inputStartData","inputEndData","NavbarContainer","elementCity","cityArr","map","container","navReducer","Navigation","header","navLink","activeClassName","activeLink","to","GET_HISTORYCAL_WEATHER","getHistorycalWeather","GET_INPUT_CITY","GET_INPUT_COUNTRY","GET_CITY","GET_COUNTRY","GET_ERROR","GET_INPUT_END_DATA","GET_INPUT_START_DATA","inputCity","inputCountry","getCity","getCountry","getError","cityValue","countryValue","Input","lable","inputType","value","onChange","withRouter","valueCity","component","names","e","getInputCity","target","getInputCountry","location","pathname","active","date","getStartData","getEndData","SearchInputContainer","GET_KEY","key","appReducer","App","dataStart","dataEnd","alert","fetch","keyAPI","API_KEY","then","res","json","catch","getKey","exact","path","render","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b03979e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Navigation_item__2KW-B\",\"activeLink\":\"Navigation_activeLink__3JxDw\",\"header\":\"Navigation_header__1fcmM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"SearchInput_component__1Dcec\",\"input\":\"SearchInput_input__ua5gX\",\"date\":\"SearchInput_date__5iznv\",\"names\":\"SearchInput_names__3CR58\",\"active\":\"SearchInput_active__3f1km\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Navbar_item__apZYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CurrentWeather_item__1Xggb\",\"genegalParams\":\"CurrentWeather_genegalParams__ykOcv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"params\":\"AirQuality_params__1OkGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Footer_item__fzSeO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Input_item__pfkDx\"};","const GET_QUALITY = \"GET_QUALITY\";\r\n\r\nlet initialState = {\r\n  quality: [],\r\n};\r\n\r\nconst qualityReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_QUALITY:\r\n      return { ...state, quality: action.data };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getQuality = (data) => {\r\n  return {\r\n    data,\r\n    type: GET_QUALITY,\r\n  };\r\n};\r\nexport default qualityReducer;\r\n","import React from \"react\";\r\nimport style from \"./AirQuality.module.css\";\r\n\r\nconst AirQuality = (props) => {\r\n  if (props.quality.data !== undefined && props.quality.data.length !== 0) {\r\n    let quality = props.quality.data[0];\r\n\r\n    const { co, so2, o3, no2, aqi } = quality;\r\n    return (\r\n      <div className={style.params}>\r\n        <h3>{props.quality.city_name}</h3>\r\n        <p>Индекс загрязнения: {aqi}</p>\r\n        <p>CO: {co} µg/m³</p>\r\n        <p>SO2: {so2} µg/m³</p>\r\n        <p>O3: {o3} µg/m³</p>\r\n        <p>NO2: {no2} µg/m³</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>Нет данных</div>;\r\n  }\r\n};\r\nexport default AirQuality;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getQuality } from \"../../redux/quality-reducer\";\r\nimport AirQuality from \"./AirQuality\";\r\nimport style from \"./../HistorycalWeather/HistorycalWeather.module.css\";\r\n\r\nclass AirQualityContainer extends React.Component {\r\n  render() {\r\n    if (this.props.quality !== undefined && this.props.quality.length !== 0) {\r\n      return (\r\n        <div>\r\n          <AirQuality quality={this.props.quality} />\r\n        </div>\r\n      );\r\n    } else if (this.props.error.length !== 0) {\r\n      return <div className={style.extension}>В базе нет такого города!</div>;\r\n    } else {\r\n      return <div className={style.extension}>Нет данных</div>;\r\n    }\r\n  }\r\n}\r\nlet mapStateToProps = (state) => {\r\n  console.log(\"state\", state);\r\n  return {\r\n    quality: state.qualityReducer.quality,\r\n    error: state.searchReducer.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getQuality })(AirQualityContainer);\r\n","const GET_WEATHER = \"GET_WEATHER\";\r\n// const GET_CITY = \"GET_CITY\";\r\n// const GET_COUNTRY = \"GET_COUNTRY\";\r\n\r\nlet initialState = {\r\n  weather: [],\r\n  // city: \"\",\r\n  // country: \"\",\r\n};\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_WEATHER:\r\n      return {\r\n        ...state,\r\n        weather: action.weather,\r\n      };\r\n    // case GET_CITY:\r\n    //   return {\r\n    //     ...state,\r\n    //     city: action.city,\r\n    //   };\r\n    // case GET_COUNTRY:\r\n    //   return {\r\n    //     ...state,\r\n    //     country: action.country,\r\n    //   };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getWeather = (weather) => {\r\n  return {\r\n    weather,\r\n    type: GET_WEATHER,\r\n  };\r\n};\r\n// export const getCity = (city) => {\r\n//   return {\r\n//     type: GET_CITY,\r\n//     city,\r\n//   };\r\n// };\r\n// export const getCountry = (country) => {\r\n//   return {\r\n//     type: GET_COUNTRY,\r\n//     country,\r\n//   };\r\n// };\r\nexport default weatherReducer;\r\n","import React from \"react\";\r\nimport style from \"./CurrentWeather.module.css\";\r\nconst CurrentWeather = (props) => {\r\n  console.log(\"props\", props.weather.data[0].weather);\r\n  let [description] = [\r\n    // props.weather.data[0].weather.icon,\r\n    props.weather.data[0].weather.description,\r\n  ];\r\n  return (\r\n    <div className={style.item}>\r\n      <h2>\r\n        {props.weather.data[0].city_name} <i className=\"fas fa-city\"></i>\r\n      </h2>\r\n      <div className={style.genegalParams}>\r\n        <p>\r\n          <i className=\"fas fa-temperature-low\"></i>{\" \"}\r\n          {props.weather.data[0].temp} °C, по ощущениям:{\" \"}\r\n          {props.weather.data[0].app_temp} °C\r\n        </p>\r\n        {/* <p>{icon}</p> */}\r\n      </div>\r\n      <p>Описание: {description}</p>\r\n      <p>\r\n        Скорость ветра <i className=\"fas fa-wind\"></i>:{\" \"}\r\n        {props.weather.data[0].wind_spd} м/с <i className=\"fas fa-compass\"></i>\r\n        {props.weather.data[0].wind_cdir}\r\n      </p>\r\n\r\n      <p>\r\n        Влажность <i className=\"fas fa-tint\"></i>: {props.weather.data[0].rh}%\r\n      </p>\r\n      <p>\r\n        Покрытие облаками <i className=\"fas fa-cloud\"></i>:\r\n        {props.weather.data[0].clouds}%{\" \"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getWeather } from \"../../redux/weather-reducer\";\r\nimport CurrentWeather from \"./CurrentWeather\";\r\nimport style from \"./../HistorycalWeather/HistorycalWeather.module.css\";\r\n\r\nclass CurrentWeatherContainer extends React.Component {\r\n  render() {\r\n    if (this.props.weather !== undefined && this.props.weather.length !== 0) {\r\n      return (\r\n        <div>\r\n          <CurrentWeather weather={this.props.weather} />\r\n        </div>\r\n      );\r\n    } else if (this.props.error.length !== 0) {\r\n      return <div className={style.extension}>В базе нет такого города!</div>;\r\n    } else {\r\n      return <div className={style.extension}>Нет данных</div>;\r\n    }\r\n  }\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    weather: state.weatherReducer.weather,\r\n    city: state.searchReducer.nameCity,\r\n    country: state.searchReducer.nameCountry,\r\n    error: state.searchReducer.error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getWeather })(\r\n  CurrentWeatherContainer\r\n);\r\n","import React from \"react\";\r\nimport style from \"./Footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return <div className={style.item}>Made by Anastasia Nazarova</div>;\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport style from \"./HistorycalWeather.module.css\";\r\n\r\nconst HistorycalWeather = (props) => {\r\n  console.log(\"props\", props);\r\n  return (\r\n    <div className={style.params}>\r\n      <h3>{props.historycalWeather.city_name}</h3>\r\n      <div className={style.param}>\r\n        <p>Максимальная суточная температура:</p>\r\n        <p>{props.historycalWeather.data[0].max_temp} °C</p>\r\n      </div>\r\n      <div className={style.param}>\r\n        <p>Минимальная суточная температура:</p>\r\n        <p>{props.historycalWeather.data[0].min_temp} °C</p>\r\n      </div>\r\n      <div className={style.param}>\r\n        <p>Средняя скорость ветра:</p>\r\n        <p>{props.historycalWeather.data[0].wind_spd} м/с</p>\r\n      </div>\r\n      <div className={style.param}>\r\n        <p>Средняя солнечная радиация:</p>\r\n        <p>{props.historycalWeather.data[0].solar_rad} Вт/м^2</p>\r\n      </div>\r\n      <div className={style.param}>\r\n        <p>Средняя относительная влажность:</p>\r\n        <p>{props.historycalWeather.data[0].rh} %</p>\r\n      </div>\r\n      <div className={style.param}>\r\n        <p>Максимальный УФ-индекс:</p>\r\n        <p>{props.historycalWeather.data[0].max_uv} </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistorycalWeather;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HistorycalWeather from \"./HistorycalWeather\";\r\nimport style from \"./HistorycalWeather.module.css\"\r\n\r\nclass HistorycalWeatherContainer extends React.Component {\r\n  render() {\r\n    if (\r\n      typeof this.props.historycalWeather !== \"string\" &&\r\n      this.props.historycalWeather !== undefined &&\r\n      this.props.historycalWeather.length !== 0\r\n    ) {\r\n      return (\r\n        <HistorycalWeather historycalWeather={this.props.historycalWeather} />\r\n      );\r\n    } else if (typeof this.props.historycalWeather === \"string\") {\r\n      console.log(this.props.historycalWeather);\r\n      return <div className={style.extension}>{this.props.historycalWeather}</div>;\r\n    } else {\r\n      return <div className={style.extension}>Нет данных</div>;\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    historycalWeather: state.historycalWeatherReducer.historycalWeather,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(HistorycalWeatherContainer);\r\n","import React from \"react\";\r\nimport style from \"./Navbar.module.css\";\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div\r\n      className={style.item}\r\n      onClick={() => {\r\n        props.getInputs(\r\n          props.item.city,\r\n          props.item.country,\r\n          props.inputStartData,\r\n          props.inputEndData\r\n        );\r\n      }}\r\n    >\r\n      <p>{props.item.city}, </p>\r\n      <p>{props.item.country}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\nimport style from \"./Navbar.module.css\";\r\n\r\nclass NavbarContainer extends React.Component {\r\n  render() {\r\n    const elementCity = this.props.cityArr.map((item) => (\r\n      <Navbar\r\n        item={item}\r\n        getInputs={this.props.getInputs}\r\n        inputEndData={this.props.inputEndData}\r\n        inputStartData={this.props.inputStartData}\r\n      />\r\n    ));\r\n    return <div className={style.container}>{elementCity}</div>;\r\n  }\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    inputEndData: state.searchReducer.inputEndData,\r\n    inputStartData: state.searchReducer.inputStartData,\r\n    cityArr: state.navReducer.cityArr,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(NavbarContainer);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from \"./Navigation.module.css\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className={style.header}>\r\n      <h1>WeatherAPI</h1>\r\n      <div className={style.item}>\r\n        <NavLink\r\n          className={style.navLink}\r\n          activeClassName={style.activeLink}\r\n          to=\"/weather\"\r\n        >\r\n          Текущая погода\r\n        </NavLink>\r\n      </div>\r\n      <div className={style.item}>\r\n        <NavLink\r\n          className={style.navLink}\r\n          activeClassName={style.activeLink}\r\n          to=\"/airquality\"\r\n        >\r\n          Текущее загрязнение\r\n        </NavLink>\r\n      </div>\r\n      <div className={style.item}>\r\n        <NavLink\r\n          className={style.navLink}\r\n          activeClassName={style.activeLink}\r\n          to=\"/historycalweather\"\r\n        >\r\n          Историческая погода\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","const GET_HISTORYCAL_WEATHER = \"GET_HISTORYCAL_WEATHER\";\r\nlet initialState = {\r\n  historycalWeather: [],\r\n};\r\n\r\nconst historycalWeatherReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_HISTORYCAL_WEATHER:\r\n      return {\r\n        ...state,\r\n        historycalWeather: action.weather,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport const getHistorycalWeather = (weather) => {\r\n  return {\r\n    type: GET_HISTORYCAL_WEATHER,\r\n    weather,\r\n  };\r\n};\r\nexport default historycalWeatherReducer;\r\n","const GET_INPUT_CITY = \"GET_INPUTS\";\r\nconst GET_INPUT_COUNTRY = \"GET_INPUT_COUNTRY\";\r\nconst GET_CITY = \"GET_CITY\";\r\nconst GET_COUNTRY = \"GET_COUNTRY\";\r\nconst GET_ERROR = \"GET_ERROR\";\r\nconst GET_INPUT_END_DATA = \"GET_INPUT_END_DATA\";\r\nconst GET_INPUT_START_DATA = \"GET_INPUT_START_DATA\";\r\n\r\nlet initialState = {\r\n  inputCity: \"\",\r\n  inputCountry: \"\",\r\n  inputStartData: \"\",\r\n  inputEndData: \"\",\r\n  nameCity: \"\",\r\n  nameCountry: \"\",\r\n  error: \"\",\r\n};\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_INPUT_CITY:\r\n      return {\r\n        ...state,\r\n        inputCity: action.cityValue,\r\n      };\r\n    case GET_INPUT_COUNTRY:\r\n      return {\r\n        ...state,\r\n        inputCountry: action.countryValue,\r\n      };\r\n    case GET_CITY:\r\n      return {\r\n        ...state,\r\n        nameCity: action.city,\r\n      };\r\n    case GET_COUNTRY:\r\n      return {\r\n        ...state,\r\n        nameCountry: action.country,\r\n      };\r\n    case GET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    case GET_INPUT_START_DATA:\r\n      return {\r\n        ...state,\r\n        inputStartData: action.data,\r\n      };\r\n    case GET_INPUT_END_DATA:\r\n      return {\r\n        ...state,\r\n        inputEndData: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getInputCity = (cityValue) => {\r\n  return {\r\n    cityValue,\r\n    type: GET_INPUT_CITY,\r\n  };\r\n};\r\n\r\nexport const getInputCountry = (countryValue) => {\r\n  return {\r\n    countryValue,\r\n    type: GET_INPUT_COUNTRY,\r\n  };\r\n};\r\nexport const getCity = (city) => {\r\n  return {\r\n    type: GET_CITY,\r\n    city,\r\n  };\r\n};\r\nexport const getCountry = (country) => {\r\n  return {\r\n    type: GET_COUNTRY,\r\n    country,\r\n  };\r\n};\r\n\r\nexport const getError = (error) => {\r\n  return {\r\n    type: GET_ERROR,\r\n    error,\r\n  };\r\n};\r\nexport const getEndData = (data) => {\r\n  return {\r\n    type: GET_INPUT_END_DATA,\r\n    data,\r\n  };\r\n};\r\nexport const getStartData = (data) => {\r\n  return {\r\n    type: GET_INPUT_START_DATA,\r\n    data,\r\n  };\r\n};\r\nexport default searchReducer;\r\n","import React from \"react\";\r\nimport style from \"./Input.module.css\";\r\nconst Input = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      <p>{props.lable}:</p>{\" \"}\r\n      <input\r\n        type={props.inputType}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Input from \"./Input/Input\";\r\nimport style from \"./SearchInput.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SearchInput = (props) => {\r\n  console.log(props.inputCity);\r\n  let valueCity = props.inputCity;\r\n  console.log(\"props\", props);\r\n  return (\r\n    <div className={style.component}>\r\n      <div className={style.names}>\r\n        <Input\r\n          lable=\"Город\"\r\n          inputType=\"text\"\r\n          value={props.inputCity}\r\n          onChange={(e) => props.getInputCity(e.target.value)}\r\n        />\r\n        <Input\r\n          lable=\"Страна\"\r\n          inputType=\"text\"\r\n          value={props.inputCountry}\r\n          onChange={(e) => props.getInputCountry(e.target.value)}\r\n        />\r\n      </div>\r\n      <div\r\n        className={\r\n          props.location.pathname === \"/historycalweather\"\r\n            ? style.active\r\n            : style.date\r\n        }\r\n      >\r\n        <Input\r\n          lable=\"Дата начала\"\r\n          inputType=\"date\"\r\n          value={props.inputStartData}\r\n          onChange={(e) => props.getStartData(e.target.value)}\r\n        />\r\n        <Input\r\n          lable=\"Дата конца\"\r\n          inputType=\"date\"\r\n          value={props.inputEndData}\r\n          onChange={(e) => props.getEndData(e.target.value)}\r\n        />\r\n      </div>\r\n      <button\r\n        onClick={() => {\r\n          props.getInputs(\r\n            valueCity,\r\n            props.inputCountry,\r\n            props.inputStartData,\r\n            props.inputEndData\r\n          );\r\n        }}\r\n      >\r\n        Найти\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SearchInput);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getHistorycalWeather } from \"../../redux/historycal-weather-reducer\";\r\nimport { getQuality } from \"../../redux/quality-reducer\";\r\nimport {\r\n  getCity,\r\n  getCountry,\r\n  getStartData,\r\n  getEndData,\r\n  getError,\r\n  getInputCity,\r\n  getInputCountry,\r\n} from \"../../redux/search-reducer\";\r\nimport { getWeather } from \"../../redux/weather-reducer\";\r\nimport SearchInput from \"./SearchInput\";\r\n\r\nclass SearchInputContainer extends React.Component {\r\n  // getInputs = (city, country, dataStart, dataEnd) => {\r\n  //   console.log(\"this.props.key\", this.props);\r\n  //   this.props.getCity(city);\r\n  //   this.props.getCountry(country);\r\n  //   if (city !== \"\" && country !== \"\") {\r\n  //     fetch(\r\n  //       `https://api.weatherbit.io/v2.0/current?city=${city}&country=${country}&key=${this.props.keyAPI.API_KEY}&include=minutely&lang=ru`\r\n  //     )\r\n  //       .then((res) => res.json())\r\n  //       .then((data) => this.props.getWeather(data))\r\n  //       .catch((error) => this.props.getError(error));\r\n  //     fetch(\r\n  //       `https://api.weatherbit.io/v2.0/current/airquality?&city=${city}&country=${country}&key=${this.props.keyAPI.API_KEY}`\r\n  //     )\r\n  //       .then((res) => res.json())\r\n  //       .then((data) => this.props.getQuality(data))\r\n  //       .catch((error) => this.props.getError(error));\r\n  //     if (dataStart !== \"\" && dataEnd !== \"\") {\r\n  //       fetch(\r\n  //         `https://api.weatherbit.io/v2.0/history/daily?&city=${city}&start_date=${dataStart}&end_date=${dataEnd}&key=${this.props.keyAPI.API_KEY}`\r\n  //       )\r\n  //         .then((res) => res.json())\r\n  //         .then((data) => this.props.getHistorycalWeather(data));\r\n  //     } else {\r\n  //       return this.props.getHistorycalWeather(\"Укажите необходимые даты\");\r\n  //     }\r\n  //   } else {\r\n  //     return alert(\"Зполните оба поля!\");\r\n  //   }\r\n  // };\r\n  render() {\r\n    return (\r\n      <SearchInput\r\n        inputCity={this.props.inputCity}\r\n        inputCountry={this.props.inputCountry}\r\n        getInputCity={this.props.getInputCity}\r\n        getInputCountry={this.props.getInputCountry}\r\n        nameCity={this.props.nameCity}\r\n        nameCountry={this.props.nameCountry}\r\n        getInputs={this.props.getInputs}\r\n        getEndData={this.props.getEndData}\r\n        getStartData={this.props.getStartData}\r\n        inputStartData={this.props.inputStartData}\r\n        inputEndData={this.props.inputEndData}\r\n        historycalWeather={this.props.historycalWeather}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  console.log(\"state\", state);\r\n  return {\r\n    inputCity: state.searchReducer.inputCity,\r\n    inputCountry: state.searchReducer.inputCountry,\r\n    nameCity: state.searchReducer.nameCity,\r\n    nameCountry: state.searchReducer.nameCountry,\r\n    inputEndData: state.searchReducer.inputEndData,\r\n    inputStartData: state.searchReducer.inputStartData,\r\n    historycalWeather: state.historycalWeatherReducer.historycalWeather,\r\n    // key: state.appReducer.key,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getInputCity,\r\n  getInputCountry,\r\n  getCity,\r\n  getCountry,\r\n  getWeather,\r\n  getQuality,\r\n  getError,\r\n  getEndData,\r\n  getStartData,\r\n  getHistorycalWeather,\r\n})(SearchInputContainer);\r\n","const GET_KEY = \"GET_KEY\";\r\n\r\nconst initialState = {\r\n  key: \"\",\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_KEY:\r\n      return {\r\n        ...state,\r\n        key: action.key,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\nexport const getKey = (key) => {\r\n  return {\r\n    type: GET_KEY,\r\n    key,\r\n  };\r\n};\r\nexport default appReducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport AirQualityContainer from \"./Components/AirQuality/AirQualityContainer\";\r\nimport CurrentWeatherContainer from \"./Components/CurrentWeather/CurrentWeatherContainer\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\nimport HistorycalWeatherContainer from \"./Components/HistorycalWeather/HistorycalWeatherContainer\";\r\nimport NavbarContainer from \"./Components/Navbar/NavbarContainer\";\r\nimport Navigation from \"./Components/Navigation/Navigation\";\r\nimport SearchInputContainer from \"./Components/SearchInput/SearchInputContainer\";\r\nimport { getKey } from \"./redux/app-reducer\";\r\nimport { getHistorycalWeather } from \"./redux/historycal-weather-reducer\";\r\nimport { getQuality } from \"./redux/quality-reducer\";\r\nimport { getCity, getCountry, getError } from \"./redux/search-reducer\";\r\nimport { getWeather } from \"./redux/weather-reducer\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    fetch(`/config/weather.json`)\r\n      .then((res) => res.json())\r\n      .then((data) => this.props.getKey(data))\r\n      .then((data) => console.log(data));\r\n  }\r\n  getInputs = (city, country, dataStart, dataEnd) => {\r\n    console.log(\"this.props.key\", this.props);\r\n    this.props.getCity(city);\r\n    this.props.getCountry(country);\r\n    if (city !== \"\" && country !== \"\") {\r\n      fetch(\r\n        `https://api.weatherbit.io/v2.0/current?city=${city}&country=${country}&key=${this.props.keyAPI.API_KEY}&include=minutely&lang=ru`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => this.props.getWeather(data))\r\n        .catch((error) => this.props.getError(error));\r\n      fetch(\r\n        `https://api.weatherbit.io/v2.0/current/airquality?&city=${city}&country=${country}&key=${this.props.keyAPI.API_KEY}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => this.props.getQuality(data))\r\n        .catch((error) => this.props.getError(error));\r\n      if (dataStart !== \"\" && dataEnd !== \"\") {\r\n        fetch(\r\n          `https://api.weatherbit.io/v2.0/history/daily?&city=${city}&start_date=${dataStart}&end_date=${dataEnd}&key=${this.props.keyAPI.API_KEY}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then((data) => this.props.getHistorycalWeather(data));\r\n      } else {\r\n        return this.props.getHistorycalWeather(\"Укажите необходимые даты\");\r\n      }\r\n    } else {\r\n      return alert(\"Заполните оба поля!\");\r\n    }\r\n  };\r\n  render() {\r\n    if (this.props.keyAPI !== undefined) {\r\n      return (\r\n        <div className=\"App\">\r\n          <div className=\"navigation\">\r\n            <Navigation />\r\n          </div>\r\n          <div className=\"navbar\">\r\n            <NavbarContainer getInputs={this.getInputs} />\r\n          </div>\r\n          <div className=\"content\">\r\n            <SearchInputContainer\r\n              keyAPI={this.props.keyAPI}\r\n              getInputs={this.getInputs}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/weather\"\r\n              render={() => <CurrentWeatherContainer />}\r\n            />\r\n            <Route path=\"/airquality\" render={() => <AirQualityContainer />} />\r\n            <Route\r\n              path=\"/historycalweather\"\r\n              render={() => <HistorycalWeatherContainer />}\r\n            />\r\n            <Redirect from=\"/\" to=\"/weather\" />\r\n          </div>\r\n          <div className=\"footer\">\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>Loading...</div>;\r\n    }\r\n  }\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    keyAPI: state.appReducer.key,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getQuality,\r\n  getWeather,\r\n  getKey,\r\n  getCity,\r\n  getCountry,\r\n  getHistorycalWeather,\r\n  getError,\r\n})(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\r\n  cityArr: [\r\n    { city: \"Moscow\", country: \"Russia\" },\r\n    { city: \"StPetersburg\", country: \"Russia\" },\r\n    { city: \"Sochi\", country: \"Russia\" },\r\n    { city: \"Kaliningrad\", country: \"Russia\" },\r\n    { city: \"Berlin\", country: \"Germany\" },\r\n    { city: \"New York\", country: \"USA\" },\r\n    { city: \"London\", country: \"US\" },\r\n    { city: \"Antalya\", country: \"Turkey\" },\r\n    { city: \"Cairo\", country: \"Egypt\" },\r\n  ],\r\n};\r\n\r\nconst navReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default navReducer;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport appReducer from \"./app-reducer\";\r\nimport historycalWeatherReducer from \"./historycal-weather-reducer\";\r\nimport navReducer from \"./navbar-reducer\";\r\nimport qualityReducer from \"./quality-reducer\";\r\nimport searchReducer from \"./search-reducer\";\r\nimport weatherReducer from \"./weather-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n  weatherReducer,\r\n  qualityReducer,\r\n  searchReducer,\r\n  historycalWeatherReducer,\r\n  appReducer,\r\n  navReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"param\":\"HistorycalWeather_param__2clbi\",\"extension\":\"HistorycalWeather_extension__3lavp\"};"],"sourceRoot":""}